	ЗАДАЧА
Ваша цель в этом ката — реализовать функцию разности, которая вычитает один список из другого и возвращает результат.
Он должен удалить из списка все значения a, которые присутствуют в списке, bсохраняя их порядок.
array_diff([1,2],[1]) == [2]
Если значение присутствует в b, все его вхождения должны быть удалены из другого:
array_diff([1,2,2,2,3],[2]) == [1,3]

	РЕШЕНИЕ
def array_diff(a, b):
    return [j for j in(a) if j not in b]
print(*array_diff([1,2,2,2,3],[2]))
	
	ЗАДАЧА
Добро пожаловать. В этой ката вас просят возвести в квадрат каждую цифру числа и соединить их.
Например, если мы пропустим через функцию 9119, получится 811181, потому что 9 2 равно 81, а 1 2 равно 1. (81-1-1-81)
Пример #2: Ввод 765 будет/должен вернуть 493625, потому что 7 2 равно 49, 6 2 равно 36, а 5 2 равно 25. (49-36-25)
Примечание. Функция принимает целое число и возвращает целое число.
Удачного кодирования!

	РЕШЕНИЕ
def square_digits(num):
    return int(''.join([str(int(i) ** 2) for i in str(num)]))

	ЗАДАЧА
	Категоризировать нового участника
Крокетный клуб Western Suburbs имеет две категории членства: Senior и Open. Им нужна ваша помощь с формой заявки, в которой
потенциальным членам будет указано, в какую категорию они будут помещены.
Чтобы быть пожилым, член должен быть не моложе 55 лет и иметь гандикап больше 7. В этом крокетном клубе гандикап варьируется 
от -2 до +26; чем лучше игрок, тем ниже гандикап.
Вход
Ввод будет состоять из списка пар. Каждая пара содержит информацию об одном потенциальном члене. Информация состоит из целого 
числа для возраста человека и целого числа для инвалидности человека.
Выход
Вывод будет состоять из списка строковых значений (в Haskell и C: Openили Senior), указывающих, должен ли соответствующий элемент
быть помещен в старшую или открытую категорию.

	РЕШЕНИЕ
def open_or_senior(data):
    x = 'Open'
    y = 'Senior'
    sp = []
    for i in range(len(data)):
        for j in range(2):
            if data[i][j] >= 55 and  data[i][j + 1] > 7:
                sp.append(y)
                break
            else:
                sp.append(x)
                break
    return sp

	ЗАДАЧА
	Получить средний персонаж
Вам дадут слово. Ваша задача — вернуть средний символ слова. Если длина слова нечетная, вернуть средний символ.
Если длина слова четная, верните средние 2 символа.
#Примеры:
Kata.getMiddle("test") should return "es"
Kata.getMiddle("testing") should return "t"

	РЕШЕНИЕ
def get_middle(s):
    if len(s) % 2 != 0:
        return s[len(s) - len(s) // 2 - 1]
    else:
        return s[len(s) - len(s) // 2 - 1:len(s) - len(s) // 2 + 1]

	ЗАДАЧИ
	Единицы и нули
Учитывая массив единиц и нулей, преобразуйте эквивалентное двоичное значение в целое число.
Например: [0, 0, 0, 1]рассматривается как 0001двоичное представление 1.

	РЕШЕНИЕ
def binary_array_to_number(arr):
    total = 0
    for i in arr:
        total = total * 2 + i
    return total


